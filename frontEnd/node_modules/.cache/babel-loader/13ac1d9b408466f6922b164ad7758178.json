{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/ReactProject/restaurent-app/frontEnd/src/Components/MenuItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport MyContext from \"../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuItem = props => {\n  _s();\n\n  const {\n    cart,\n    setCart,\n    pizzas,\n    setPizzas\n  } = useContext(MyContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menuItem\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: `url(${props.image})`\n      },\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", props.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"red\",\n        fontFamily: \"cursive\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        children: props.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 61\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \\u20AC\", props.price, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: props.stock === 0,\n        onClick: () => {\n          const item = cart.find(element => element.id === props.id);\n\n          if (item) {\n            item.quantity += 1;\n          } else {\n            setCart([...cart, {\n              name: props.name,\n              id: props.id,\n              stock: props.stock,\n              quantity: 1,\n              image: props.image,\n              caption: props.caption,\n              price: props.price\n            }]);\n          }\n\n          const myPizza = pizzas.find(pizza => pizza.id === props.id);\n          myPizza.stock -= 1;\n          setPizzas([...pizzas]);\n        },\n        children: props.stock > 0 ? 'Add to Cart' : 'Sold Out'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MenuItem, \"mcXSTGObVe/ruFTg6tmPEFuRi9U=\");\n\n_c = MenuItem;\nexport default MenuItem;\n/* const MenuItem=({image, name, price })=> {\n  return (\n    <div className=\"menuItem\">\n      <div style={{ backgroundImage: `url(${image})` }}> </div>\n      <h1> {name} </h1>\n      <p> €{price} </p>   \n    </div>\n  );\n} */\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuItem\");","map":{"version":3,"sources":["/home/user/Desktop/ReactProject/restaurent-app/frontEnd/src/Components/MenuItem.js"],"names":["React","useContext","MyContext","MenuItem","props","cart","setCart","pizzas","setPizzas","backgroundImage","image","name","color","fontFamily","caption","price","stock","item","find","element","id","quantity","myPizza","pizza"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;;AAGA,MAAMC,QAAQ,GAAGC,KAAK,IACtB;AAAA;;AACE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA;AAAxB,MAAsCP,UAAU,CAAEC,SAAF,CAAtD;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAK,MAAA,KAAK,EAAG;AAAEO,QAAAA,eAAe,EAAG,OAAOL,KAAK,CAACM,KAAO;AAAxC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,sBAAON,KAAK,CAACO,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAI,MAAA,KAAK,EAAG;AAAEC,QAAAA,KAAK,EAAE,KAAT;AAAgBC,QAAAA,UAAU,EAAE;AAA5B,OAAZ;AAAA,8BAAsD;AAAA,kBAAKT,KAAK,CAACU;AAAX;AAAA;AAAA;AAAA;AAAA,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,4BAAOV,KAAK,CAACW,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,QAAQ,EAAEX,KAAK,CAACY,KAAN,KAAgB,CAAlC;AAAqC,QAAA,OAAO,EAAG,MAC/C;AACE,gBAAMC,IAAI,GAAGZ,IAAI,CAACa,IAAL,CAAWC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAehB,KAAK,CAACgB,EAA3C,CAAb;;AACA,cAAKH,IAAL,EACA;AACEA,YAAAA,IAAI,CAACI,QAAL,IAAe,CAAf;AACD,WAHD,MAIA;AACEf,YAAAA,OAAO,CAAE,CAAE,GAAGD,IAAL,EAAW;AAAEM,cAAAA,IAAI,EAAEP,KAAK,CAACO,IAAd;AAAoBS,cAAAA,EAAE,EAAEhB,KAAK,CAACgB,EAA9B;AAAkCJ,cAAAA,KAAK,EAACZ,KAAK,CAACY,KAA9C;AAAqDK,cAAAA,QAAQ,EAAE,CAA/D;AAAkEX,cAAAA,KAAK,EAAEN,KAAK,CAACM,KAA/E;AAAsFI,cAAAA,OAAO,EAAEV,KAAK,CAACU,OAArG;AAA8GC,cAAAA,KAAK,EAAEX,KAAK,CAACW;AAA3H,aAAX,CAAF,CAAP;AACD;;AACD,gBAAMO,OAAO,GAAGf,MAAM,CAACW,IAAP,CAAYK,KAAK,IAAEA,KAAK,CAACH,EAAN,KAAahB,KAAK,CAACgB,EAAtC,CAAhB;AACAE,UAAAA,OAAO,CAACN,KAAR,IAAiB,CAAjB;AACAR,UAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,CAAD,CAAT;AAED,SAdD;AAAA,kBAcKH,KAAK,CAACY,KAAN,GAAc,CAAd,GAAkB,aAAlB,GAAiC;AAdtC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA7BD;;GAAMb,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useContext } from \"react\";\nimport MyContext from \"../context/Context\";\n\n\nconst MenuItem = props =>\n{\n  const { cart, setCart,pizzas, setPizzas } = useContext( MyContext );\n  return (\n    <div className=\"menuItem\">\n      <div style={ { backgroundImage: `url(${ props.image })` } }> </div>\n      <h1> { props.name } </h1>\n      <h2 style={ { color: \"red\", fontFamily: \"cursive\" } }><i>{ props.caption }</i> </h2>\n      <p> €{ props.price } </p>\n      <div>\n        <button>Details</button>\n        <button disabled={props.stock === 0} onClick={ () =>\n        {\n          const item = cart.find( element => element.id === props.id );\n          if ( item )\n          {\n            item.quantity+=1;\n          } else\n          {\n            setCart( [ ...cart, { name: props.name, id: props.id, stock:props.stock, quantity: 1, image: props.image, caption: props.caption, price: props.price } ] );\n          }\n          const myPizza = pizzas.find(pizza=>pizza.id === props.id)\n          myPizza.stock -= 1;\n          setPizzas([...pizzas])\n\n        } }>{props.stock > 0 ? 'Add to Cart': 'Sold Out'}</button>\n      </div>\n    </div>\n  );\n};\n\nexport default MenuItem;\n\n/* const MenuItem=({image, name, price })=> {\n  return (\n    <div className=\"menuItem\">\n      <div style={{ backgroundImage: `url(${image})` }}> </div>\n      <h1> {name} </h1>\n      <p> €{price} </p>   \n    </div>\n  );\n} */"]},"metadata":{},"sourceType":"module"}